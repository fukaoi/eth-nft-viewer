{"ast":null,"code":"var _jsxFileName = \"/home/t/Work/My/NFT/eth-nft-viewer/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Web3 from \"web3\"; // import abi from \"./contracts/cryptoKitties.json\";\n\nimport abi from \"./contracts/myCryptoHeroes.json\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      imageList: []\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        const web3 = new Web3('https://mainnet.infura.io/v3/1835809e0e6a4de38eaf1f7afb51e0ec'); // my cry\n        // const address = \"0x273f7f8e6489682df756151f5525576e322d51a3\";\n        // crypto kitty\n        // const address = \"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\";\n        // SuperRare\n\n        const address = \"0xb932a70A57673d89f4acfFBE830E8ed7f75Fb9e0\";\n        const ids = ['1969328'];\n        let dict = [];\n        let n = 1;\n        const c = new web3.eth.Contract(abi, address); // console.log(c.methods.tokenURI('9529').call());\n\n        console.log(c.methods.tokenMetadata(ids[0], \"\").call());\n\n        for (let i in ids) {\n          const response = await c.methods.tokenURI(ids[i]).call();\n          axios.get(response).then(res => {\n            dict.push( /*#__PURE__*/React.createElement(\"div\", {\n              className: \"item\",\n              style: {\n                display: \"inline-block\"\n              },\n              key: n++,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 15\n              }\n            }, /*#__PURE__*/React.createElement(\"img\", {\n              src: res['data']['image'],\n              width: \"150\",\n              height: \"150\",\n              border: \"0\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }\n            })));\n            this.setState({\n              imageList: dict\n            });\n          });\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    }, this.state.imageList);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/t/Work/My/NFT/eth-nft-viewer/client/src/App.js"],"names":["React","Component","axios","Web3","abi","App","state","imageList","componentDidMount","web3","address","ids","dict","n","c","eth","Contract","console","log","methods","tokenMetadata","call","i","response","tokenURI","get","then","res","push","display","setState","error","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,iCAAhB;AAEA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AAACC,MAAAA,SAAS,EAAE;AAAZ,KADkB;;AAAA,SAG1BC,iBAH0B,GAGN,YAAY;AAC9B,UAAI;AACF,cAAMC,IAAI,GAAG,IAAIN,IAAJ,CAAS,+DAAT,CAAb,CADE,CAGF;AACA;AACA;AACA;AACA;;AACA,cAAMO,OAAO,GAAG,4CAAhB;AACA,cAAMC,GAAG,GAAG,CACV,SADU,CAAZ;AAIA,YAAIC,IAAI,GAAG,EAAX;AACA,YAAIC,CAAC,GAAG,CAAR;AAEA,cAAMC,CAAC,GAAG,IAAIL,IAAI,CAACM,GAAL,CAASC,QAAb,CAAsBZ,GAAtB,EAA2BM,OAA3B,CAAV,CAhBE,CAiBA;;AACAO,QAAAA,OAAO,CAACC,GAAR,CAAYJ,CAAC,CAACK,OAAF,CAAUC,aAAV,CAAwBT,GAAG,CAAC,CAAD,CAA3B,EAAgC,EAAhC,EAAoCU,IAApC,EAAZ;;AACF,aAAK,IAAIC,CAAT,IAAcX,GAAd,EAAmB;AACjB,gBAAMY,QAAQ,GAAG,MAAMT,CAAC,CAACK,OAAF,CAAUK,QAAV,CAAmBb,GAAG,CAACW,CAAD,CAAtB,EAA2BD,IAA3B,EAAvB;AACAnB,UAAAA,KAAK,CAACuB,GAAN,CAAUF,QAAV,EAAoBG,IAApB,CACEC,GAAG,IAAI;AACLf,YAAAA,IAAI,CAACgB,IAAL,eACE;AACE,cAAA,SAAS,EAAC,MADZ;AAEE,cAAA,KAAK,EAAE;AAACC,gBAAAA,OAAO,EAAE;AAAV,eAFT;AAGE,cAAA,GAAG,EAAEhB,CAAC,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAKE;AAAK,cAAA,GAAG,EAAEc,GAAG,CAAC,MAAD,CAAH,CAAY,OAAZ,CAAV;AACE,cAAA,KAAK,EAAC,KADR;AAEE,cAAA,MAAM,EAAC,KAFT;AAGE,cAAA,MAAM,EAAC,GAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CADF;AAaA,iBAAKG,QAAL,CAAc;AAACvB,cAAAA,SAAS,EAAEK;AAAZ,aAAd;AACD,WAhBH;AAkBD;AACF,OAxCD,CAwCE,OAAOmB,KAAP,EAAc;AACdd,QAAAA,OAAO,CAACc,KAAR,CAAcA,KAAd;AACD;AACF,KA/CyB;AAAA;;AAiD1BC,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAK1B,KAAL,CAAWC,SAAjC,CAAP;AACD;;AAnDyB;;AAsD5B,eAAeF,GAAf","sourcesContent":["import React, {Component} from \"react\";\nimport axios from \"axios\";\nimport Web3 from \"web3\";\n// import abi from \"./contracts/cryptoKitties.json\";\nimport abi from \"./contracts/myCryptoHeroes.json\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {imageList: []};\n\n  componentDidMount = async () => {\n    try {\n      const web3 = new Web3('https://mainnet.infura.io/v3/1835809e0e6a4de38eaf1f7afb51e0ec');\n\n      // my cry\n      // const address = \"0x273f7f8e6489682df756151f5525576e322d51a3\";\n      // crypto kitty\n      // const address = \"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\";\n      // SuperRare\n      const address = \"0xb932a70A57673d89f4acfFBE830E8ed7f75Fb9e0\";\n      const ids = [\n        '1969328',\n      ];\n\n      let dict = [];\n      let n = 1;\n\n      const c = new web3.eth.Contract(abi, address);\n        // console.log(c.methods.tokenURI('9529').call());\n        console.log(c.methods.tokenMetadata(ids[0], \"\").call());\n      for (let i in ids) {\n        const response = await c.methods.tokenURI(ids[i]).call();\n        axios.get(response).then(\n          res => {\n            dict.push(\n              <div\n                className=\"item\"\n                style={{display: \"inline-block\"}}\n                key={n++}\n              >\n                <img src={res['data']['image']}\n                  width=\"150\"\n                  height=\"150\"\n                  border=\"0\"\n                />\n              </div>\n            );\n            this.setState({imageList: dict});\n          }\n        );\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  render() {\n    return <div className=\"App\">{this.state.imageList}</div>;\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}