{"ast":null,"code":"var _jsxFileName = \"/home/t/Work/My/NFT/eth-nft-viewer/client/src/components/App.js\";\nimport { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport abi from \"../abi/erc721.json\";\nimport { ajax } from 'rxjs/ajax';\nexport const App = () => {\n  const web3 = new Web3('https://mainnet.infura.io/v3/1835809e0e6a4de38eaf1f7afb51e0ec');\n  const address = \"0xb932a70A57673d89f4acfFBE830E8ed7f75Fb9e0\";\n  const ids = ['7391'];\n  const [images, setImages] = useState([]);\n  const contract = new web3.eth.Contract(abi, address); // my cry\n  // const address = \"0x273f7f8e6489682df756151f5525576e322d51a3\";\n  // crypto kitty\n  // const address = \"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\";\n  // SuperRare\n\n  useEffect(() => {\n    (async () => {\n      ids.map(async id => {\n        const url = await contract.methods.tokenURI(id).call();\n        ajax.getJSON(url).subscribe(setImages);\n      });\n    })();\n  }, []);\n  console.log(images); // let dict = [];\n  // let n = 1;\n  // for (let i in ids) {\n  // axios.get(url).then(\n  // res => {\n  // dict.push(\n  // <div\n  // className=\"item\"\n  // style={{display: \"inline-block\"}}\n  // key={n++}\n  // >\n  // <img src={res['data']['image']}\n  // width=\"150\"\n  // height=\"150\"\n  // border=\"0\"\n  // />\n  // </div>\n  // );\n  // setImages({imageList: dict});\n  // }\n  // );\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, images.image);\n};\nexport default App;","map":{"version":3,"sources":["/home/t/Work/My/NFT/eth-nft-viewer/client/src/components/App.js"],"names":["useState","useEffect","Web3","abi","ajax","App","web3","address","ids","images","setImages","contract","eth","Contract","map","id","url","methods","tokenURI","call","getJSON","subscribe","console","log","image"],"mappings":";AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AACvB,QAAMC,IAAI,GAAG,IAAIJ,IAAJ,CAAS,+DAAT,CAAb;AACA,QAAMK,OAAO,GAAG,4CAAhB;AACA,QAAMC,GAAG,GAAG,CACV,MADU,CAAZ;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMW,QAAQ,GAAG,IAAIL,IAAI,CAACM,GAAL,CAASC,QAAb,CAAsBV,GAAtB,EAA2BI,OAA3B,CAAjB,CARuB,CAUvB;AACA;AACA;AACA;AACA;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACXO,MAAAA,GAAG,CAACM,GAAJ,CAAQ,MAAOC,EAAP,IAAc;AACpB,cAAMC,GAAG,GAAG,MAAML,QAAQ,CAACM,OAAT,CAAiBC,QAAjB,CAA0BH,EAA1B,EAA8BI,IAA9B,EAAlB;AACAf,QAAAA,IAAI,CAACgB,OAAL,CAAaJ,GAAb,EAAkBK,SAAlB,CAA4BX,SAA5B;AACD,OAHD;AAID,KALD;AAMD,GAPQ,EAON,EAPM,CAAT;AASAY,EAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ,EAxBuB,CA0BvB;AACA;AAEA;AAGE;AACE;AACE;AACE;AACE;AACA;AACA;AACF;AACE;AACE;AACA;AACA;AACF;AACF;AACF;AACA;AACF;AACF;AACF;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBA,MAAM,CAACe,KAA7B,CAAP;AACD,CArDM;AAuDP,eAAenB,GAAf","sourcesContent":["import {useState, useEffect} from \"react\";\nimport Web3 from \"web3\";\nimport abi from \"../abi/erc721.json\";\nimport {ajax} from 'rxjs/ajax';\n\nexport const App = () => {\n  const web3 = new Web3('https://mainnet.infura.io/v3/1835809e0e6a4de38eaf1f7afb51e0ec');\n  const address = \"0xb932a70A57673d89f4acfFBE830E8ed7f75Fb9e0\";\n  const ids = [\n    '7391',\n  ];\n\n  const [images, setImages] = useState([]);\n  const contract = new web3.eth.Contract(abi, address);\n\n  // my cry\n  // const address = \"0x273f7f8e6489682df756151f5525576e322d51a3\";\n  // crypto kitty\n  // const address = \"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\";\n  // SuperRare\n  useEffect(() => {\n    (async () => {\n      ids.map(async (id) => {\n        const url = await contract.methods.tokenURI(id).call();\n        ajax.getJSON(url).subscribe(setImages);\n      })\n    })();\n  }, [])\n\n  console.log(images);\n\n  // let dict = [];\n  // let n = 1;\n\n  // for (let i in ids) {\n\n\n    // axios.get(url).then(\n      // res => {\n        // dict.push(\n          // <div\n            // className=\"item\"\n            // style={{display: \"inline-block\"}}\n            // key={n++}\n          // >\n            // <img src={res['data']['image']}\n              // width=\"150\"\n              // height=\"150\"\n              // border=\"0\"\n            // />\n          // </div>\n        // );\n        // setImages({imageList: dict});\n      // }\n    // );\n  // }\n\n  return <div className=\"App\">{images.image}</div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}