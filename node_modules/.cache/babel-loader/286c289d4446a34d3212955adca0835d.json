{"ast":null,"code":"var _jsxFileName = \"/home/t/Work/My/NFT/eth-nft-viewer/client/src/components/pages/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { ajax } from 'rxjs/ajax';\nimport Templates from \"../templates\";\nimport { getTokenIds, getMetaData } from \"../../shared/web3Client\";\nexport const Pages = () => {\n  console.error(\"#pages\");\n  const [metaDatas, setMetaDatas] = useState([]);\n  const ids = getTokenIds();\n  let arr = [];\n  useEffect(() => {\n    ids.map(async id => {\n      const url = await getMetaData(id);\n      fetch(url).then(res => {\n        console.log(res);\n        console.log(arr);\n        arr.push(res.json());\n      }).then(res => {\n        console.log(res);\n        setMetaDatas(res);\n      }); // const sub = ajax.getJSON(url).subscribe(\n      // res => {\n      // arr.push(res);\n      // setMetaDatas([...arr]);\n      // });\n      // return () => sub.unsubscribe();\n    }, [ids]);\n  });\n  return /*#__PURE__*/React.createElement(Templates, {\n    metaDatas: metaDatas,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  });\n};\nexport default Pages;","map":{"version":3,"sources":["/home/t/Work/My/NFT/eth-nft-viewer/client/src/components/pages/index.js"],"names":["React","useState","useEffect","ajax","Templates","getTokenIds","getMetaData","Pages","console","error","metaDatas","setMetaDatas","ids","arr","map","id","url","fetch","then","res","log","push","json"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,yBAAvC;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AACzBC,EAAAA,OAAO,CAACC,KAAR,CAAc,QAAd;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMW,GAAG,GAAGP,WAAW,EAAvB;AACA,MAAIQ,GAAG,GAAG,EAAV;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,GAAG,CAACE,GAAJ,CAAQ,MAAOC,EAAP,IAAc;AACpB,YAAMC,GAAG,GAAG,MAAMV,WAAW,CAACS,EAAD,CAA7B;AACAE,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQC,GAAG,IAAI;AACXX,QAAAA,OAAO,CAACY,GAAR,CAAYD,GAAZ;AACAX,QAAAA,OAAO,CAACY,GAAR,CAAYP,GAAZ;AACAA,QAAAA,GAAG,CAACQ,IAAJ,CAASF,GAAG,CAACG,IAAJ,EAAT;AACD,OALH,EAMGJ,IANH,CAMQC,GAAG,IAAI;AACXX,QAAAA,OAAO,CAACY,GAAR,CAAYD,GAAZ;AACAR,QAAAA,YAAY,CAACQ,GAAD,CAAZ;AACD,OATH,EAFoB,CAYpB;AACE;AACE;AACA;AACF;AACF;AACD,KAlBD,EAkBG,CAACP,GAAD,CAlBH;AAmBD,GApBQ,CAAT;AAqBA,sBAAO,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEF,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CA3BM;AA6BP,eAAeH,KAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {ajax} from 'rxjs/ajax';\nimport Templates from \"../templates\";\nimport {getTokenIds, getMetaData} from \"../../shared/web3Client\";\n\nexport const Pages = () => {\n  console.error(\"#pages\");\n  const [metaDatas, setMetaDatas] = useState([]);\n  const ids = getTokenIds();\n  let arr = [];\n  useEffect(() => {\n    ids.map(async (id) => {\n      const url = await getMetaData(id);\n      fetch(url)\n        .then(res => {\n          console.log(res);\n          console.log(arr);\n          arr.push(res.json());\n        })\n        .then(res => {\n          console.log(res);\n          setMetaDatas(res);\n        })\n      // const sub = ajax.getJSON(url).subscribe(\n        // res => {\n          // arr.push(res);\n          // setMetaDatas([...arr]);\n        // });\n      // return () => sub.unsubscribe();\n    }, [ids])\n  })\n  return <Templates metaDatas={metaDatas} />;\n}\n\nexport default Pages;\n"]},"metadata":{},"sourceType":"module"}