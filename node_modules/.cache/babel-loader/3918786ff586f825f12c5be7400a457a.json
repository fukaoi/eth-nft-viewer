{"ast":null,"code":"var _jsxFileName = \"/home/t/Work/My/NFT/eth-nft-viewer/client/src/components/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Web3 from \"web3\";\nimport abi from \"../abi/erc721.json\";\nimport { ajax } from 'rxjs/ajax';\nimport { map } from 'rxjs/operators';\nimport \"./App.css\";\nexport const App = () => {\n  const web3 = new Web3('https://mainnet.infura.io/v3/1835809e0e6a4de38eaf1f7afb51e0ec');\n  const address = \"0xb932a70A57673d89f4acfFBE830E8ed7f75Fb9e0\";\n  const ids = ['7391'];\n  const [images, setImages] = useState({\n    imageList: []\n  });\n  const contract = new web3.eth.Contract(abi, address); // my cry\n  // const address = \"0x273f7f8e6489682df756151f5525576e322d51a3\";\n  // crypto kitty\n  // const address = \"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\";\n  // SuperRare\n\n  useEffect(() => {\n    (async () => {\n      ids.map(async id => {\n        const url = await c.methods.tokenURI(id).call();\n        ajax.getJSON(url).pipe(map(console.log)).subscribe();\n      });\n    })();\n  }, []); // let dict = [];\n  // let n = 1;\n  // for (let i in ids) {\n  // axios.get(url).then(\n  // res => {\n  // dict.push(\n  // <div\n  // className=\"item\"\n  // style={{display: \"inline-block\"}}\n  // key={n++}\n  // >\n  // <img src={res['data']['image']}\n  // width=\"150\"\n  // height=\"150\"\n  // border=\"0\"\n  // />\n  // </div>\n  // );\n  // setImages({imageList: dict});\n  // }\n  // );\n  // }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 10\n    }\n  }, images.imageList);\n};\nexport default App;","map":{"version":3,"sources":["/home/t/Work/My/NFT/eth-nft-viewer/client/src/components/App.js"],"names":["React","useState","useEffect","axios","Web3","abi","ajax","map","App","web3","address","ids","images","setImages","imageList","contract","eth","Contract","id","url","c","methods","tokenURI","call","getJSON","pipe","console","log","subscribe"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAAQC,IAAR,QAAmB,WAAnB;AACA,SAAQC,GAAR,QAAkB,gBAAlB;AAEA,OAAO,WAAP;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AACvB,QAAMC,IAAI,GAAG,IAAIL,IAAJ,CAAS,+DAAT,CAAb;AACA,QAAMM,OAAO,GAAG,4CAAhB;AACA,QAAMC,GAAG,GAAG,CACV,MADU,CAAZ;AAIA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC;AAACa,IAAAA,SAAS,EAAE;AAAZ,GAAD,CAApC;AACA,QAAMC,QAAQ,GAAG,IAAIN,IAAI,CAACO,GAAL,CAASC,QAAb,CAAsBZ,GAAtB,EAA2BK,OAA3B,CAAjB,CARuB,CAUvB;AACA;AACA;AACA;AACA;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACXS,MAAAA,GAAG,CAACJ,GAAJ,CAAQ,MAAOW,EAAP,IAAc;AACpB,cAAMC,GAAG,GAAG,MAAMC,CAAC,CAACC,OAAF,CAAUC,QAAV,CAAmBJ,EAAnB,EAAuBK,IAAvB,EAAlB;AACAjB,QAAAA,IAAI,CAACkB,OAAL,CAAaL,GAAb,EAAkBM,IAAlB,CACElB,GAAG,CAACmB,OAAO,CAACC,GAAT,CADL,EAEEC,SAFF;AAGD,OALD;AAMD,KAPD;AAQD,GATQ,EASN,EATM,CAAT,CAfuB,CA0BvB;AACA;AAEA;AAGE;AACE;AACE;AACE;AACE;AACA;AACA;AACF;AACE;AACE;AACA;AACA;AACF;AACF;AACF;AACA;AACF;AACF;AACF;;AAEA,sBAAO;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBhB,MAAM,CAACE,SAA7B,CAAP;AACD,CArDM;AAuDP,eAAeN,GAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport axios from \"axios\";\nimport Web3 from \"web3\";\nimport abi from \"../abi/erc721.json\";\nimport {ajax} from 'rxjs/ajax';\nimport {map} from 'rxjs/operators';\n\nimport \"./App.css\";\n\nexport const App = () => {\n  const web3 = new Web3('https://mainnet.infura.io/v3/1835809e0e6a4de38eaf1f7afb51e0ec');\n  const address = \"0xb932a70A57673d89f4acfFBE830E8ed7f75Fb9e0\";\n  const ids = [\n    '7391',\n  ];\n\n  const [images, setImages] = useState({imageList: []});\n  const contract = new web3.eth.Contract(abi, address);\n\n  // my cry\n  // const address = \"0x273f7f8e6489682df756151f5525576e322d51a3\";\n  // crypto kitty\n  // const address = \"0x06012c8cf97BEaD5deAe237070F9587f8E7A266d\";\n  // SuperRare\n  useEffect(() => {\n    (async () => {\n      ids.map(async (id) => {\n        const url = await c.methods.tokenURI(id).call();\n        ajax.getJSON(url).pipe(\n          map(console.log)\n        ).subscribe();\n      })\n    })();\n  }, [])\n\n  // let dict = [];\n  // let n = 1;\n\n  // for (let i in ids) {\n\n\n    // axios.get(url).then(\n      // res => {\n        // dict.push(\n          // <div\n            // className=\"item\"\n            // style={{display: \"inline-block\"}}\n            // key={n++}\n          // >\n            // <img src={res['data']['image']}\n              // width=\"150\"\n              // height=\"150\"\n              // border=\"0\"\n            // />\n          // </div>\n        // );\n        // setImages({imageList: dict});\n      // }\n    // );\n  // }\n\n  return <div className=\"App\">{images.imageList}</div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}